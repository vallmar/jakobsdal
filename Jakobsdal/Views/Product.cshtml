@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.Product>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
    Layout = "~/Views/_layoutJd.cshtml";
}
@{
    var umbracoHelper = new UmbracoHelper(UmbracoContext.Current);
    var currentPage = umbracoHelper.AssignedContentItem;
    var products = currentPage.Parent.Children;
    products.Concat(new List<IPublishedContent> { currentPage });
}
<script src="~/Controllers/productsController.controller.js"></script>
@foreach (var item in products)
{
    <div id="product" ng-controller="productsController">
        <div class="container">
            <div class="col-xs-3">
                @{
                    Umbraco.Media(@item.GetPropertyValue("pictures")).ToString();
                    var dynamicMediaItem = Umbraco.Media(Umbraco.Field("pictures", recursive: true).ToString());
                    <img  ng-click="showDetailedContentChange()" src="@dynamicMediaItem.umbracoFile" alt="" height="225" width="225" />
                }
                <div class="overview">
                    <div class="product-overview-header" ng-click="showDetailedContentChange()"><a href="#">@Umbraco.Field("header")</a></div>
                    <div class="product-overview-bodytext">@item.GetPropertyValue("overviewtext")</div>
                </div>
            </div>
        </div>
        <div class="detailedContent container" ng-if="showDetailedContent">
            <div class="col-xs-8">
                <div>
                    @item.GetPropertyValue("detailedText")
                </div>
            </div>
            <div class="contentDeclaration col-xs-4">
                <div>Innehållsdeklaration</div>
                <div>
                    @item.GetPropertyValue("maintext")
                </div>
                <div>
                    @item.GetPropertyValue("energy")
                </div>
                <div>
                    @item.GetPropertyValue("Fat")
                </div>
                <div>
                    @item.GetPropertyValue("protein")
                </div>
                <div>
                    @item.GetPropertyValue("carbs")
                </div>
                <div>
                    @item.GetPropertyValue("salt")
                </div>
                <div>
                    @item.GetPropertyValue("saturatedFat")
                </div>
                <div>
                    @item.GetPropertyValue("whereSugars")
                </div>
            </div>
        </div>
    </div>
}
                
